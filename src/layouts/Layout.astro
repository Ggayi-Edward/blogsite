---
import { ViewTransitions } from 'astro:transitions';
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';
import '@fontsource/playfair-display/400.css';
import '@fontsource/playfair-display/700.css';
import '@fontsource/lora/400.css';
import '@fontsource/lora/600.css';

interface Props {
  title?: string;
  description?: string;
  ogImage?: string;
}

const { 
  title = 'Modern Blog', 
  description = 'A blog for sharing posts, ideas, and art', 
  ogImage = '/images/og-image.jpg' 
} = Astro.props;
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImage} />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={ogImage} />
    
    <ViewTransitions />
    
    <script is:inline>
      function initTheme() {
        const isDark = 
          localStorage.getItem('theme') === 'dark' || 
          (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches);
        
        if (isDark) {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      }
      
      initTheme();
      document.addEventListener('astro:after-swap', initTheme);
    </script>
  </head>
  <body class="min-h-screen bg-white dark:bg-gray-950 text-gray-900 dark:text-gray-100 font-serif bg-vintage-texture transition-colors duration-200">
    <Navigation />
    
    <main class="flex-grow">
      <slot />
    </main>
    
    <Footer />
  </body>
</html>

<style is:global>
  @tailwind base;
  @tailwind components;
  @tailwind utilities;
  
  @layer base {
    body {
      @apply antialiased;
    }
    
    h1, h2, h3, h4, h5, h6 {
      @apply font-sans font-bold leading-tight tracking-tight;
    }
    
    h1 {
      @apply text-4xl md:text-5xl;
    }
    
    h2 {
      @apply text-3xl md:text-4xl;
    }
    
    h3 {
      @apply text-2xl md:text-3xl;
    }
    
    h4 {
      @apply text-xl md:text-2xl;
    }
    
    p {
      @apply leading-relaxed;
    }
    
    img {
      @apply max-w-full h-auto;
    }
  }
  
  @layer components {
    .container {
      @apply max-w-7xl mx-auto px-4 sm:px-6 lg:px-8;
    }
    
    .btn {
      @apply inline-flex items-center justify-center px-5 py-2.5 rounded-none font-medium transition-all duration-200 focus:outline-none border-2 uppercase tracking-widest text-sm;
    }
    
    .btn-primary {
      @apply btn bg-primary-800 hover:bg-primary-900 text-white border-primary-800 hover:border-primary-900;
    }
    
    .btn-secondary {
      @apply btn bg-secondary-800 hover:bg-secondary-900 text-white border-secondary-800 hover:border-secondary-900;
    }
    
    .btn-outline {
      @apply btn border-2 border-primary-800 dark:border-primary-600 hover:bg-primary-800 hover:text-white dark:hover:bg-primary-600;
    }
    
    .card {
      @apply bg-white dark:bg-gray-900 border-2 border-primary-800 dark:border-primary-600 overflow-hidden transition duration-200;
    }
  }
</style>